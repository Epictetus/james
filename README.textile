h1. James

A voice controlled electronic butler.

h2. Requirements

* OSX
* MacRuby (install rvm, @rvm install macruby@)

h2. Installation

@gem install james@ (OSX only)

h2. Basics

James consists of dialogs that are modeled as state machines. You navigate through these dialogs by talking to James.

He will then take action (looking up timetables, checking the weather etc.) and inform you. Or maybe just tell a joke.

h2. Examples

All examples can be found in "/examples":http://github.com/floere/james/tree/master/examples.

Create a file called @time_dialog.rb@:

<pre><code>James.use_dialog do

  hear 'what time is it?' => :time

  state :time do
    hear ['What time is it?', 'And now?'] => :time
    into { time = Time.now; "It is currently #{time.hour} #{time.min}." }
    exit {} # Optional, listed for completeness.
  end

end</code></pre>

This says that if James hears (@hear@) @"What time is it?"@ that it should enter this conversation into state @:time@.

If he then hears "What time is it?" again, it will return to state @:time@.

When he enters (@into@), James executes the block in the dialog's context. Whatever is returned from the block, James will say out lout. Everything else he will just think. (So it's like Sinatra in rendering, just that James renders audio)

Here, he will just say the current time when entering the @:time@ state.

h3. Running it

Running it is easy. Either use

<pre><code>require 'rubygems'
require 'james'

# Your dialog goes here.

# This is needed to start James.
#
James.listen</code></pre>

in your script, and call it by using

<pre><code>ruby time_dialog.rb</code></pre>

Or, without the @James.listen@, use @ruby -rexamples/your_dialog.rb -e "James.listen"@ in the command line.

Or else, in the terminal, just call

<pre><code>$ james</code></pre>

and it will include all dialogs (files called @_dialog{ue,}.rb@, the @ue@ is for the brits and aussies :) ) in this directory and subdirectories. E.g. @joke_dialog.rb@, @newsfeed_dialog.rb@, or @social_media/tweets_dialog.rb@.

You can select dialogs using their file names

<pre><code>$ james time_dialog.rb twitter_dialog.rb</code></pre>

and it will include the time dialog and the twitter dialog.

Or a bit snappier

<pre><code>$ james {time,twitter}*.rb</code></pre>

to do the same as above.

h3. Short Version

There is a short, anonymous dialog version, using @James.use_dialog@.

<pre><code>James.use_dialog do

  hear 'what time is it?' => :time

  state :time do
    hear ['What time is it?', 'And now?'] => :time
    into { time = Time.now; "It is currently #{time.hour} #{time.min}." }
  end

end</code></pre>

h3. Extended Version

Or there is an extended version, using initialize with parameters to set up some important stuff that needs other stuff for doing stuff, you know?

<pre><code>require 'james'

class TwitterDialog

  include James::Dialog

  def initialize user, password
    @client = Twitter.new user, password
  end

  hear 'What are the birds tweeting?' => :newsfeed

  state :newsfeed do
    hear 'Who mentions me?' => :mentions
    into do
      # Complicated feed loading
      "People are saying this: #{@client.newsfeed(10).join(' ... ')}"
    end
  end

  state :mentions do
    hear ['What is generally said?', 'Back to newsfeed!'] => :newsfeed
    into do
      # Complicated feed loading
      "People are saying this: #{@client.mentions(10).join(' ... ')}"
    end
  end

end

James.use TwitterDialog.new('user', 'password')

James.listen</code></pre>

h2. Contributions

Contributions are in the "/examples":http://github.com/floere/james/tree/master/examples folder.
Sending dialog gists is appreciated. Thanks!

After forking, in the james directory, run @./bin/james examples/time_dialog.rb@ to have your first successful experience! :)

h2. Running the tests

<pre><code>rake</code></pre>

h2. Roadmap

* Make James (e.g. voice, core dialog) configurable.
* Add more useful dialogs made by YOU :)

h2. Ideas

# Put it on a Mac Mini, attach a few microphones, distribute in the house.
# Create a few useful dialogs, like a train timetable, or similar.
# Sit on your sofa, and talk to James out loud.
# Send us your dialogs :)

h2. MIT License

Copyright (c) 2011 Florian Hanke

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.