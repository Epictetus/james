h1. James

A voice controlled electronic butler

h2. Requirements

* OSX
* MacRuby

h2. Installation

@gem install james@ (OSX only)

h2. Basics

James consists of dialog(ue)s that are modeled as state machines. You navigate through these dialog(ue)s by talking to James.

h2. Examples

Create a file called @time_dialogue.rb@ (or @time_dialog.rb@, James doesn't mind Americans):

```ruby
class TimeDialogue

  include James::Dialogue

  hear 'what time is it?' => :time
  state :time do
    hear ['What time is it?', 'And now?'] => :time
    into { time = Time.now; "It is currently #{time.hour} #{time.min}." }
    exit {} # Optional, listed for completeness.
  end

end
```

This says that if James hears (@hear@) @"What time is it?"@ that it should enter this conversation into state @:time@.

If he then hears "What time is it?" again, it will return to state @:time@.

When he enters (@into@), James executes the block in the dialogue's context. Whatever is returned from the block, James will say out lout. Everything else he will just think. (So it's like Sinatra in rendering, just that James renders audio)

Here, he will just say the current time when entering the @:time@ state.

h3. Running it

Running it is easy. Either use
@require 'james'@
in your script, and call it by using
@ruby time_dialogue.rb@
or else, in the terminal, just call
@$ james@
and it will include all dialogues in this directory.
Or
@$ james time joke twitter@
and it will include the time dialogue, the joke dialogue, and the twitter dialogue.

h3. Short Version

There is a short, anonymous dialog version, using @James.dialogue@.

```ruby
  James.dialogue do

    hear 'what time is it?' => :time
    state :time do
      hear ['What time is it?', 'And now?'] => :time
      into { time = Time.now; "It is currently #{time.hour} #{time.min}." }
    end

  end
```

h3. Extended Version

Or there is an extended version, using initialize to set up some important stuff that needs other stuff for doing stuff, you know?

```ruby
require 'james'

class TwitterDialogue

  include James::Dialogue

  def initialize
    @client = Twitter.new 'user', 'password'
  end

  hear 'What are the birds tweeting?' => :newsfeed
  state :newsfeed do
    hear 'Who mentions me?' => :mentions
    into do
      # Complicated feed loading
      "People are saying this: #{@client.newsfeed(10).join(' ... ')}"
    end
  end
  state :mentions do
    hear ['What is generally said?', 'Back to newsfeed!'] => :newsfeed
    into do
      # Complicated feed loading
      "People are saying this: #{@client.mentions(10).join(' ... ')}"
    end
  end

end
```

h2. Contributions

Contributions: @/contributions@ Thanks!

h2. MIT License

Copyright (c) 2011 Florian Hanke

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.